name: Release and Publish

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v4

      - name: üõ† Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: üîº Bump npm version (patch)
        run: npm version patch --no-git-tag-version

      - name: üíæ Store new version
        id: version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: üß∞ Build Go executable for Windows
        run: GOOS=windows GOARCH=amd64 go build -o textwrench-hotkeys.exe ./cmd/app

      - name: üß∞ Build Go executable for macOS
        run: GOOS=darwin GOARCH=amd64 go build -o textwrench-hotkeys-macos ./cmd/app

      - name: üì¶ Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          files: |
            textwrench-hotkeys.exe
            textwrench-hotkeys-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üîê Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: üì§ Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: üìå Commit and push updated package.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json package-lock.json
          git commit -m "chore: release v${{ env.VERSION }}"
          git tag v${{ env.VERSION }}
          git push origin main --follow-tags
