name: Release and Publish

on:
  push:
    branches:
      - main

env:
  GO_VERSION: '1.22'
  NODE_VERSION: '20'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🔐 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🔼 Bump npm version (patch)
        run: |
          npm version patch --no-git-tag-version

      - name: 💾 Get and output new version
        id: set-version
        run: echo "version=$(node -p 'require(\"./package.json\").version')" >> $GITHUB_OUTPUT
      
      - name: 💾 Store new version
        id: version
        run: echo "VERSION=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      - name: 📤 Upload versioned package.json and lock file
        uses: actions/upload-artifact@v4
        with:
          name: versioned-package
          path: |
            package.json
            package-lock.json

  build-windows:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 🧰 Build Go executable for Windows
        run: GOOS=windows GOARCH=amd64 go build -o textwrench-hotkeys.exe ./cmd/app

      - name: 📤 Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: textwrench-hotkeys.exe
          path: textwrench-hotkeys.exe

  build-macos:
    needs: version
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 🧰 Build Go executable for macOS
        run: go build -o textwrench-hotkeys-macos ./cmd/app

      - name: 📤 Upload macOS binary
        uses: actions/upload-artifact@v4
        with:
          name: textwrench-hotkeys-macos
          path: textwrench-hotkeys-macos

  release:
    needs: [version, build-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: 📁 Prepare files for npm
        run: |
          ls -la artifacts
          find artifacts -type f -name 'textwrench-hotkeys*' -exec cp {} ./ \;

      - name: 📥 Restore versioned package.json
        uses: actions/download-artifact@v4
        with:
          name: versioned-package
          path: .

      - name: 🔐 Set up Node.js for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: 📤 Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📌 Commit and push updated version and tag
        env:
          VERSION: ${{ env.VERSION  }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json
          git commit -m "chore: release v$VERSION"
          git tag v$VERSION
          git push origin main --follow-tags
          
      - name: 📦 Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION  }}
          name: v${{ env.VERSION  }}
          files: |
            textwrench-hotkeys.exe
            textwrench-hotkeys-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
